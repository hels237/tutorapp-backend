<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.backend.tutor_app.TutorAppApplicationTests" time="16.978" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="17"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.class.path" value="/home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend/target/test-classes:/home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend/target/classes:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.5.6/spring-boot-starter-data-jpa-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter/3.5.6/spring-boot-starter-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot/3.5.6/spring-boot-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.5.6/spring-boot-autoconfigure-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.5.6/spring-boot-starter-logging-3.5.6.jar:/home/hels/.m2/repository/ch/qos/logback/logback-classic/1.5.18/logback-classic-1.5.18.jar:/home/hels/.m2/repository/ch/qos/logback/logback-core/1.5.18/logback-core-1.5.18.jar:/home/hels/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/home/hels/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/home/hels/.m2/repository/org/slf4j/jul-to-slf4j/2.0.17/jul-to-slf4j-2.0.17.jar:/home/hels/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/hels/.m2/repository/org/yaml/snakeyaml/2.4/snakeyaml-2.4.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.5.6/spring-boot-starter-jdbc-3.5.6.jar:/home/hels/.m2/repository/com/zaxxer/HikariCP/6.3.3/HikariCP-6.3.3.jar:/home/hels/.m2/repository/org/springframework/spring-jdbc/6.2.11/spring-jdbc-6.2.11.jar:/home/hels/.m2/repository/org/hibernate/orm/hibernate-core/6.6.29.Final/hibernate-core-6.6.29.Final.jar:/home/hels/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/hels/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/hels/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/home/hels/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/home/hels/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/home/hels/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/home/hels/.m2/repository/net/bytebuddy/byte-buddy/1.17.7/byte-buddy-1.17.7.jar:/home/hels/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/hels/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/hels/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/hels/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/hels/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/hels/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/hels/.m2/repository/org/springframework/data/spring-data-jpa/3.5.4/spring-data-jpa-3.5.4.jar:/home/hels/.m2/repository/org/springframework/data/spring-data-commons/3.5.4/spring-data-commons-3.5.4.jar:/home/hels/.m2/repository/org/springframework/spring-orm/6.2.11/spring-orm-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-context/6.2.11/spring-context-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-tx/6.2.11/spring-tx-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-beans/6.2.11/spring-beans-6.2.11.jar:/home/hels/.m2/repository/org/slf4j/slf4j-api/2.0.17/slf4j-api-2.0.17.jar:/home/hels/.m2/repository/org/springframework/spring-aspects/6.2.11/spring-aspects-6.2.11.jar:/home/hels/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.5.6/spring-boot-starter-mail-3.5.6.jar:/home/hels/.m2/repository/org/springframework/spring-context-support/6.2.11/spring-context-support-6.2.11.jar:/home/hels/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.4/jakarta.mail-2.0.4.jar:/home/hels/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.4/jakarta.activation-api-2.1.4.jar:/home/hels/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.5.6/spring-boot-starter-validation-3.5.6.jar:/home/hels/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.46/tomcat-embed-el-10.1.46.jar:/home/hels/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.3.Final/hibernate-validator-8.0.3.Final.jar:/home/hels/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.5.6/spring-boot-starter-security-3.5.6.jar:/home/hels/.m2/repository/org/springframework/spring-aop/6.2.11/spring-aop-6.2.11.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-config/6.5.5/spring-security-config-6.5.5.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-web/6.5.5/spring-security-web-6.5.5.jar:/home/hels/.m2/repository/org/springframework/spring-expression/6.2.11/spring-expression-6.2.11.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-oauth2-client/3.5.6/spring-boot-starter-oauth2-client-3.5.6.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-core/6.5.5/spring-security-core-6.5.5.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-crypto/6.5.5/spring-security-crypto-6.5.5.jar:/home/hels/.m2/repository/io/micrometer/micrometer-observation/1.15.4/micrometer-observation-1.15.4.jar:/home/hels/.m2/repository/io/micrometer/micrometer-commons/1.15.4/micrometer-commons-1.15.4.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-oauth2-client/6.5.5/spring-security-oauth2-client-6.5.5.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-oauth2-core/6.5.5/spring-security-oauth2-core-6.5.5.jar:/home/hels/.m2/repository/com/nimbusds/oauth2-oidc-sdk/9.43.6/oauth2-oidc-sdk-9.43.6.jar:/home/hels/.m2/repository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar:/home/hels/.m2/repository/com/nimbusds/content-type/2.2/content-type-2.2.jar:/home/hels/.m2/repository/com/nimbusds/lang-tag/1.7/lang-tag-1.7.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-oauth2-jose/6.5.5/spring-security-oauth2-jose-6.5.5.jar:/home/hels/.m2/repository/com/nimbusds/nimbus-jose-jwt/9.37.4/nimbus-jose-jwt-9.37.4.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/3.5.6/spring-boot-starter-data-redis-3.5.6.jar:/home/hels/.m2/repository/io/lettuce/lettuce-core/6.6.0.RELEASE/lettuce-core-6.6.0.RELEASE.jar:/home/hels/.m2/repository/redis/clients/authentication/redis-authx-core/0.1.1-beta2/redis-authx-core-0.1.1-beta2.jar:/home/hels/.m2/repository/io/netty/netty-common/4.1.127.Final/netty-common-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-handler/4.1.127.Final/netty-handler-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-resolver/4.1.127.Final/netty-resolver-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-buffer/4.1.127.Final/netty-buffer-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.127.Final/netty-transport-native-unix-common-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-codec/4.1.127.Final/netty-codec-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-transport/4.1.127.Final/netty-transport-4.1.127.Final.jar:/home/hels/.m2/repository/io/projectreactor/reactor-core/3.7.11/reactor-core-3.7.11.jar:/home/hels/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/hels/.m2/repository/org/springframework/data/spring-data-redis/3.5.4/spring-data-redis-3.5.4.jar:/home/hels/.m2/repository/org/springframework/data/spring-data-keyvalue/3.5.4/spring-data-keyvalue-3.5.4.jar:/home/hels/.m2/repository/org/springframework/spring-oxm/6.2.11/spring-oxm-6.2.11.jar:/home/hels/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/hels/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/hels/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/hels/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.19.2/jackson-databind-2.19.2.jar:/home/hels/.m2/repository/me/paulschwarz/spring-dotenv/3.0.0/spring-dotenv-3.0.0.jar:/home/hels/.m2/repository/io/github/cdimascio/dotenv-java/2.2.4/dotenv-java-2.2.4.jar:/home/hels/.m2/repository/com/maxmind/geoip2/geoip2/4.2.0/geoip2-4.2.0.jar:/home/hels/.m2/repository/com/maxmind/db/maxmind-db/3.1.0/maxmind-db-3.1.0.jar:/home/hels/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.19.2/jackson-core-2.19.2.jar:/home/hels/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.19.2/jackson-annotations-2.19.2.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/3.5.6/spring-boot-starter-thymeleaf-3.5.6.jar:/home/hels/.m2/repository/org/thymeleaf/thymeleaf-spring6/3.1.3.RELEASE/thymeleaf-spring6-3.1.3.RELEASE.jar:/home/hels/.m2/repository/org/thymeleaf/thymeleaf/3.1.3.RELEASE/thymeleaf-3.1.3.RELEASE.jar:/home/hels/.m2/repository/org/attoparser/attoparser/2.0.7.RELEASE/attoparser-2.0.7.RELEASE.jar:/home/hels/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/home/hels/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.8.9/springdoc-openapi-starter-webmvc-ui-2.8.9.jar:/home/hels/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.8.9/springdoc-openapi-starter-webmvc-api-2.8.9.jar:/home/hels/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.8.9/springdoc-openapi-starter-common-2.8.9.jar:/home/hels/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.30/swagger-core-jakarta-2.2.30.jar:/home/hels/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/home/hels/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.30/swagger-annotations-jakarta-2.2.30.jar:/home/hels/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.30/swagger-models-jakarta-2.2.30.jar:/home/hels/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.19.2/jackson-dataformat-yaml-2.19.2.jar:/home/hels/.m2/repository/org/webjars/swagger-ui/5.21.0/swagger-ui-5.21.0.jar:/home/hels/.m2/repository/org/webjars/webjars-locator-lite/1.1.0/webjars-locator-lite-1.1.0.jar:/home/hels/.m2/repository/org/jspecify/jspecify/1.0.0/jspecify-1.0.0.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.5.6/spring-boot-starter-web-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.5.6/spring-boot-starter-json-3.5.6.jar:/home/hels/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.19.2/jackson-datatype-jdk8-2.19.2.jar:/home/hels/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.19.2/jackson-datatype-jsr310-2.19.2.jar:/home/hels/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.19.2/jackson-module-parameter-names-2.19.2.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.5.6/spring-boot-starter-tomcat-3.5.6.jar:/home/hels/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.46/tomcat-embed-core-10.1.46.jar:/home/hels/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.46/tomcat-embed-websocket-10.1.46.jar:/home/hels/.m2/repository/org/springframework/spring-web/6.2.11/spring-web-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-webmvc/6.2.11/spring-webmvc-6.2.11.jar:/home/hels/.m2/repository/org/postgresql/postgresql/42.7.7/postgresql-42.7.7.jar:/home/hels/.m2/repository/org/checkerframework/checker-qual/3.49.3/checker-qual-3.49.3.jar:/home/hels/.m2/repository/org/projectlombok/lombok/1.18.40/lombok-1.18.40.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.5.6/spring-boot-starter-test-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-test/3.5.6/spring-boot-test-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.5.6/spring-boot-test-autoconfigure-3.5.6.jar:/home/hels/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/hels/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/hels/.m2/repository/net/minidev/json-smart/2.5.2/json-smart-2.5.2.jar:/home/hels/.m2/repository/net/minidev/accessors-smart/2.5.2/accessors-smart-2.5.2.jar:/home/hels/.m2/repository/org/ow2/asm/asm/9.7.1/asm-9.7.1.jar:/home/hels/.m2/repository/org/assertj/assertj-core/3.27.4/assertj-core-3.27.4.jar:/home/hels/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/home/hels/.m2/repository/org/hamcrest/hamcrest/3.0/hamcrest-3.0.jar:/home/hels/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.2/junit-jupiter-5.12.2.jar:/home/hels/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.2/junit-jupiter-api-5.12.2.jar:/home/hels/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/hels/.m2/repository/org/junit/platform/junit-platform-commons/1.12.2/junit-platform-commons-1.12.2.jar:/home/hels/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/hels/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.2/junit-jupiter-params-5.12.2.jar:/home/hels/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.2/junit-jupiter-engine-5.12.2.jar:/home/hels/.m2/repository/org/junit/platform/junit-platform-engine/1.12.2/junit-platform-engine-1.12.2.jar:/home/hels/.m2/repository/org/mockito/mockito-core/5.17.0/mockito-core-5.17.0.jar:/home/hels/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.7/byte-buddy-agent-1.17.7.jar:/home/hels/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/hels/.m2/repository/org/mockito/mockito-junit-jupiter/5.17.0/mockito-junit-jupiter-5.17.0.jar:/home/hels/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/home/hels/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/hels/.m2/repository/org/springframework/spring-core/6.2.11/spring-core-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-jcl/6.2.11/spring-jcl-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-test/6.2.11/spring-test-6.2.11.jar:/home/hels/.m2/repository/org/xmlunit/xmlunit-core/2.10.4/xmlunit-core-2.10.4.jar:"/>
    <property name="java.vm.vendor" value="Amazon.com Inc."/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.vendor.url" value="https://aws.amazon.com/corretto/"/>
    <property name="user.timezone" value="Africa/Douala"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Linux"/>
    <property name="java.vm.specification.version" value="17"/>
    <property name="APPLICATION_NAME" value="tutorapp-backend"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.boot.library.path" value="/home/hels/.jdks/corretto-17.0.14/lib"/>
    <property name="sun.java.command" value="/home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend/target/surefire/surefirebooter-20251101072341873_3.jar /home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend/target/surefire 2025-11-01T07-23-41_714-jvmRun1 surefire-20251101072341873_1tmp surefire_0-20251101072341873_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="/home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend/target/test-classes:/home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend/target/classes:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/3.5.6/spring-boot-starter-data-jpa-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter/3.5.6/spring-boot-starter-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot/3.5.6/spring-boot-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/3.5.6/spring-boot-autoconfigure-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-logging/3.5.6/spring-boot-starter-logging-3.5.6.jar:/home/hels/.m2/repository/ch/qos/logback/logback-classic/1.5.18/logback-classic-1.5.18.jar:/home/hels/.m2/repository/ch/qos/logback/logback-core/1.5.18/logback-core-1.5.18.jar:/home/hels/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.24.3/log4j-to-slf4j-2.24.3.jar:/home/hels/.m2/repository/org/apache/logging/log4j/log4j-api/2.24.3/log4j-api-2.24.3.jar:/home/hels/.m2/repository/org/slf4j/jul-to-slf4j/2.0.17/jul-to-slf4j-2.0.17.jar:/home/hels/.m2/repository/jakarta/annotation/jakarta.annotation-api/2.1.1/jakarta.annotation-api-2.1.1.jar:/home/hels/.m2/repository/org/yaml/snakeyaml/2.4/snakeyaml-2.4.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/3.5.6/spring-boot-starter-jdbc-3.5.6.jar:/home/hels/.m2/repository/com/zaxxer/HikariCP/6.3.3/HikariCP-6.3.3.jar:/home/hels/.m2/repository/org/springframework/spring-jdbc/6.2.11/spring-jdbc-6.2.11.jar:/home/hels/.m2/repository/org/hibernate/orm/hibernate-core/6.6.29.Final/hibernate-core-6.6.29.Final.jar:/home/hels/.m2/repository/jakarta/persistence/jakarta.persistence-api/3.1.0/jakarta.persistence-api-3.1.0.jar:/home/hels/.m2/repository/jakarta/transaction/jakarta.transaction-api/2.0.1/jakarta.transaction-api-2.0.1.jar:/home/hels/.m2/repository/org/jboss/logging/jboss-logging/3.6.1.Final/jboss-logging-3.6.1.Final.jar:/home/hels/.m2/repository/org/hibernate/common/hibernate-commons-annotations/7.0.3.Final/hibernate-commons-annotations-7.0.3.Final.jar:/home/hels/.m2/repository/io/smallrye/jandex/3.2.0/jandex-3.2.0.jar:/home/hels/.m2/repository/com/fasterxml/classmate/1.7.0/classmate-1.7.0.jar:/home/hels/.m2/repository/net/bytebuddy/byte-buddy/1.17.7/byte-buddy-1.17.7.jar:/home/hels/.m2/repository/org/glassfish/jaxb/jaxb-runtime/4.0.5/jaxb-runtime-4.0.5.jar:/home/hels/.m2/repository/org/glassfish/jaxb/jaxb-core/4.0.5/jaxb-core-4.0.5.jar:/home/hels/.m2/repository/org/glassfish/jaxb/txw2/4.0.5/txw2-4.0.5.jar:/home/hels/.m2/repository/com/sun/istack/istack-commons-runtime/4.1.2/istack-commons-runtime-4.1.2.jar:/home/hels/.m2/repository/jakarta/inject/jakarta.inject-api/2.0.1/jakarta.inject-api-2.0.1.jar:/home/hels/.m2/repository/org/antlr/antlr4-runtime/4.13.0/antlr4-runtime-4.13.0.jar:/home/hels/.m2/repository/org/springframework/data/spring-data-jpa/3.5.4/spring-data-jpa-3.5.4.jar:/home/hels/.m2/repository/org/springframework/data/spring-data-commons/3.5.4/spring-data-commons-3.5.4.jar:/home/hels/.m2/repository/org/springframework/spring-orm/6.2.11/spring-orm-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-context/6.2.11/spring-context-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-tx/6.2.11/spring-tx-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-beans/6.2.11/spring-beans-6.2.11.jar:/home/hels/.m2/repository/org/slf4j/slf4j-api/2.0.17/slf4j-api-2.0.17.jar:/home/hels/.m2/repository/org/springframework/spring-aspects/6.2.11/spring-aspects-6.2.11.jar:/home/hels/.m2/repository/org/aspectj/aspectjweaver/1.9.24/aspectjweaver-1.9.24.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-mail/3.5.6/spring-boot-starter-mail-3.5.6.jar:/home/hels/.m2/repository/org/springframework/spring-context-support/6.2.11/spring-context-support-6.2.11.jar:/home/hels/.m2/repository/org/eclipse/angus/jakarta.mail/2.0.4/jakarta.mail-2.0.4.jar:/home/hels/.m2/repository/jakarta/activation/jakarta.activation-api/2.1.4/jakarta.activation-api-2.1.4.jar:/home/hels/.m2/repository/org/eclipse/angus/angus-activation/2.0.2/angus-activation-2.0.2.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-validation/3.5.6/spring-boot-starter-validation-3.5.6.jar:/home/hels/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/10.1.46/tomcat-embed-el-10.1.46.jar:/home/hels/.m2/repository/org/hibernate/validator/hibernate-validator/8.0.3.Final/hibernate-validator-8.0.3.Final.jar:/home/hels/.m2/repository/jakarta/validation/jakarta.validation-api/3.0.2/jakarta.validation-api-3.0.2.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-security/3.5.6/spring-boot-starter-security-3.5.6.jar:/home/hels/.m2/repository/org/springframework/spring-aop/6.2.11/spring-aop-6.2.11.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-config/6.5.5/spring-security-config-6.5.5.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-web/6.5.5/spring-security-web-6.5.5.jar:/home/hels/.m2/repository/org/springframework/spring-expression/6.2.11/spring-expression-6.2.11.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-oauth2-client/3.5.6/spring-boot-starter-oauth2-client-3.5.6.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-core/6.5.5/spring-security-core-6.5.5.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-crypto/6.5.5/spring-security-crypto-6.5.5.jar:/home/hels/.m2/repository/io/micrometer/micrometer-observation/1.15.4/micrometer-observation-1.15.4.jar:/home/hels/.m2/repository/io/micrometer/micrometer-commons/1.15.4/micrometer-commons-1.15.4.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-oauth2-client/6.5.5/spring-security-oauth2-client-6.5.5.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-oauth2-core/6.5.5/spring-security-oauth2-core-6.5.5.jar:/home/hels/.m2/repository/com/nimbusds/oauth2-oidc-sdk/9.43.6/oauth2-oidc-sdk-9.43.6.jar:/home/hels/.m2/repository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar:/home/hels/.m2/repository/com/nimbusds/content-type/2.2/content-type-2.2.jar:/home/hels/.m2/repository/com/nimbusds/lang-tag/1.7/lang-tag-1.7.jar:/home/hels/.m2/repository/org/springframework/security/spring-security-oauth2-jose/6.5.5/spring-security-oauth2-jose-6.5.5.jar:/home/hels/.m2/repository/com/nimbusds/nimbus-jose-jwt/9.37.4/nimbus-jose-jwt-9.37.4.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/3.5.6/spring-boot-starter-data-redis-3.5.6.jar:/home/hels/.m2/repository/io/lettuce/lettuce-core/6.6.0.RELEASE/lettuce-core-6.6.0.RELEASE.jar:/home/hels/.m2/repository/redis/clients/authentication/redis-authx-core/0.1.1-beta2/redis-authx-core-0.1.1-beta2.jar:/home/hels/.m2/repository/io/netty/netty-common/4.1.127.Final/netty-common-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-handler/4.1.127.Final/netty-handler-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-resolver/4.1.127.Final/netty-resolver-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-buffer/4.1.127.Final/netty-buffer-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.127.Final/netty-transport-native-unix-common-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-codec/4.1.127.Final/netty-codec-4.1.127.Final.jar:/home/hels/.m2/repository/io/netty/netty-transport/4.1.127.Final/netty-transport-4.1.127.Final.jar:/home/hels/.m2/repository/io/projectreactor/reactor-core/3.7.11/reactor-core-3.7.11.jar:/home/hels/.m2/repository/org/reactivestreams/reactive-streams/1.0.4/reactive-streams-1.0.4.jar:/home/hels/.m2/repository/org/springframework/data/spring-data-redis/3.5.4/spring-data-redis-3.5.4.jar:/home/hels/.m2/repository/org/springframework/data/spring-data-keyvalue/3.5.4/spring-data-keyvalue-3.5.4.jar:/home/hels/.m2/repository/org/springframework/spring-oxm/6.2.11/spring-oxm-6.2.11.jar:/home/hels/.m2/repository/io/jsonwebtoken/jjwt-api/0.11.5/jjwt-api-0.11.5.jar:/home/hels/.m2/repository/io/jsonwebtoken/jjwt-impl/0.11.5/jjwt-impl-0.11.5.jar:/home/hels/.m2/repository/io/jsonwebtoken/jjwt-jackson/0.11.5/jjwt-jackson-0.11.5.jar:/home/hels/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.19.2/jackson-databind-2.19.2.jar:/home/hels/.m2/repository/me/paulschwarz/spring-dotenv/3.0.0/spring-dotenv-3.0.0.jar:/home/hels/.m2/repository/io/github/cdimascio/dotenv-java/2.2.4/dotenv-java-2.2.4.jar:/home/hels/.m2/repository/com/maxmind/geoip2/geoip2/4.2.0/geoip2-4.2.0.jar:/home/hels/.m2/repository/com/maxmind/db/maxmind-db/3.1.0/maxmind-db-3.1.0.jar:/home/hels/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.19.2/jackson-core-2.19.2.jar:/home/hels/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.19.2/jackson-annotations-2.19.2.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/3.5.6/spring-boot-starter-thymeleaf-3.5.6.jar:/home/hels/.m2/repository/org/thymeleaf/thymeleaf-spring6/3.1.3.RELEASE/thymeleaf-spring6-3.1.3.RELEASE.jar:/home/hels/.m2/repository/org/thymeleaf/thymeleaf/3.1.3.RELEASE/thymeleaf-3.1.3.RELEASE.jar:/home/hels/.m2/repository/org/attoparser/attoparser/2.0.7.RELEASE/attoparser-2.0.7.RELEASE.jar:/home/hels/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/home/hels/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-ui/2.8.9/springdoc-openapi-starter-webmvc-ui-2.8.9.jar:/home/hels/.m2/repository/org/springdoc/springdoc-openapi-starter-webmvc-api/2.8.9/springdoc-openapi-starter-webmvc-api-2.8.9.jar:/home/hels/.m2/repository/org/springdoc/springdoc-openapi-starter-common/2.8.9/springdoc-openapi-starter-common-2.8.9.jar:/home/hels/.m2/repository/io/swagger/core/v3/swagger-core-jakarta/2.2.30/swagger-core-jakarta-2.2.30.jar:/home/hels/.m2/repository/org/apache/commons/commons-lang3/3.17.0/commons-lang3-3.17.0.jar:/home/hels/.m2/repository/io/swagger/core/v3/swagger-annotations-jakarta/2.2.30/swagger-annotations-jakarta-2.2.30.jar:/home/hels/.m2/repository/io/swagger/core/v3/swagger-models-jakarta/2.2.30/swagger-models-jakarta-2.2.30.jar:/home/hels/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.19.2/jackson-dataformat-yaml-2.19.2.jar:/home/hels/.m2/repository/org/webjars/swagger-ui/5.21.0/swagger-ui-5.21.0.jar:/home/hels/.m2/repository/org/webjars/webjars-locator-lite/1.1.0/webjars-locator-lite-1.1.0.jar:/home/hels/.m2/repository/org/jspecify/jspecify/1.0.0/jspecify-1.0.0.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-web/3.5.6/spring-boot-starter-web-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-json/3.5.6/spring-boot-starter-json-3.5.6.jar:/home/hels/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.19.2/jackson-datatype-jdk8-2.19.2.jar:/home/hels/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.19.2/jackson-datatype-jsr310-2.19.2.jar:/home/hels/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.19.2/jackson-module-parameter-names-2.19.2.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/3.5.6/spring-boot-starter-tomcat-3.5.6.jar:/home/hels/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/10.1.46/tomcat-embed-core-10.1.46.jar:/home/hels/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/10.1.46/tomcat-embed-websocket-10.1.46.jar:/home/hels/.m2/repository/org/springframework/spring-web/6.2.11/spring-web-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-webmvc/6.2.11/spring-webmvc-6.2.11.jar:/home/hels/.m2/repository/org/postgresql/postgresql/42.7.7/postgresql-42.7.7.jar:/home/hels/.m2/repository/org/checkerframework/checker-qual/3.49.3/checker-qual-3.49.3.jar:/home/hels/.m2/repository/org/projectlombok/lombok/1.18.40/lombok-1.18.40.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-starter-test/3.5.6/spring-boot-starter-test-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-test/3.5.6/spring-boot-test-3.5.6.jar:/home/hels/.m2/repository/org/springframework/boot/spring-boot-test-autoconfigure/3.5.6/spring-boot-test-autoconfigure-3.5.6.jar:/home/hels/.m2/repository/com/jayway/jsonpath/json-path/2.9.0/json-path-2.9.0.jar:/home/hels/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/4.0.2/jakarta.xml.bind-api-4.0.2.jar:/home/hels/.m2/repository/net/minidev/json-smart/2.5.2/json-smart-2.5.2.jar:/home/hels/.m2/repository/net/minidev/accessors-smart/2.5.2/accessors-smart-2.5.2.jar:/home/hels/.m2/repository/org/ow2/asm/asm/9.7.1/asm-9.7.1.jar:/home/hels/.m2/repository/org/assertj/assertj-core/3.27.4/assertj-core-3.27.4.jar:/home/hels/.m2/repository/org/awaitility/awaitility/4.2.2/awaitility-4.2.2.jar:/home/hels/.m2/repository/org/hamcrest/hamcrest/3.0/hamcrest-3.0.jar:/home/hels/.m2/repository/org/junit/jupiter/junit-jupiter/5.12.2/junit-jupiter-5.12.2.jar:/home/hels/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.12.2/junit-jupiter-api-5.12.2.jar:/home/hels/.m2/repository/org/opentest4j/opentest4j/1.3.0/opentest4j-1.3.0.jar:/home/hels/.m2/repository/org/junit/platform/junit-platform-commons/1.12.2/junit-platform-commons-1.12.2.jar:/home/hels/.m2/repository/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar:/home/hels/.m2/repository/org/junit/jupiter/junit-jupiter-params/5.12.2/junit-jupiter-params-5.12.2.jar:/home/hels/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.12.2/junit-jupiter-engine-5.12.2.jar:/home/hels/.m2/repository/org/junit/platform/junit-platform-engine/1.12.2/junit-platform-engine-1.12.2.jar:/home/hels/.m2/repository/org/mockito/mockito-core/5.17.0/mockito-core-5.17.0.jar:/home/hels/.m2/repository/net/bytebuddy/byte-buddy-agent/1.17.7/byte-buddy-agent-1.17.7.jar:/home/hels/.m2/repository/org/objenesis/objenesis/3.3/objenesis-3.3.jar:/home/hels/.m2/repository/org/mockito/mockito-junit-jupiter/5.17.0/mockito-junit-jupiter-5.17.0.jar:/home/hels/.m2/repository/org/skyscreamer/jsonassert/1.5.3/jsonassert-1.5.3.jar:/home/hels/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/home/hels/.m2/repository/org/springframework/spring-core/6.2.11/spring-core-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-jcl/6.2.11/spring-jcl-6.2.11.jar:/home/hels/.m2/repository/org/springframework/spring-test/6.2.11/spring-test-6.2.11.jar:/home/hels/.m2/repository/org/xmlunit/xmlunit-core/2.10.4/xmlunit-core-2.10.4.jar:"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="/home/hels"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2025-01-21"/>
    <property name="java.home" value="/home/hels/.jdks/corretto-17.0.14"/>
    <property name="file.separator" value="/"/>
    <property name="style.color" value="always"/>
    <property name="basedir" value="/home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="/home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend/target/surefire/surefirebooter-20251101072341873_3.jar"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="17.0.14+7-LTS"/>
    <property name="user.name" value="hels"/>
    <property name="path.separator" value=":"/>
    <property name="os.version" value="6.8.0-86-generic"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="java.vendor.version" value="Corretto-17.0.14.7.1"/>
    <property name="maven.ext.class.path" value="/snap/intellij-idea-ultimate/682/plugins/maven/lib/maven-event-listener.jar"/>
    <property name="localRepository" value="/home/hels/.m2/repository"/>
    <property name="java.vendor.url.bug" value="https://github.com/corretto/corretto-17/issues/"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="idea.version" value="2025.2.4"/>
    <property name="com.zaxxer.hikari.pool_number" value="1"/>
    <property name="java.version" value="17.0.14"/>
    <property name="user.dir" value="/home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend"/>
    <property name="os.arch" value="amd64"/>
    <property name="jansi.passthrough" value="true"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="22410"/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="java.vendor" value="Amazon.com Inc."/>
    <property name="java.vm.version" value="17.0.14+7-LTS"/>
    <property name="java.specification.maintenance.version" value="1"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="maven.repo.local" value="/home/hels/.m2/repository"/>
    <property name="java.class.version" value="61.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[tutorapp-backend] "/>
  </properties>
  <testcase name="contextLoads" classname="com.backend.tutor_app.TutorAppApplicationTests" time="0.58">
    <system-out><![CDATA[07:23:43.139 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.backend.tutor_app.TutorAppApplicationTests]: TutorAppApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
07:23:43.446 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.backend.tutor_app.TutorAppApplication for test class com.backend.tutor_app.TutorAppApplicationTests
 _________  ___  ___  _________  ________  ________                 ________  ________  ________
|\___   ___\\  \|\  \|\___   ___\\   __  \|\   __  \               |\   __  \|\   __  \|\   __  \
\|___ \  \_\ \  \\\  \|___ \  \_\ \  \|\  \ \  \|\  \  ____________\ \  \|\  \ \  \|\  \ \  \|\  \
     \ \  \ \ \  \\\  \   \ \  \ \ \  \\\  \ \   _  _\|\____________\ \   __  \ \   ____\ \   ____\
      \ \  \ \ \  \\\  \   \ \  \ \ \  \\\  \ \  \\  \\|____________|\ \  \ \  \ \  \___|\ \  \___|
       \ \__\ \ \_______\   \ \__\ \ \_______\ \__\\ _\               \ \__\ \__\ \__\    \ \__\
        \|__|  \|_______|    \|__|  \|_______|\|__|\|__|               \|__|\|__|\|__|     \|__|



2025-11-01T07:23:44.274+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.b.tutor_app.TutorAppApplicationTests   : Starting TutorAppApplicationTests using Java 17.0.14 with PID 22410 (started by hels in /home/hels/Desktop/TutorApp project/TutorApp-fullstack/TutorApp-backend)
2025-11-01T07:23:44.276+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] c.b.tutor_app.TutorAppApplicationTests   : Running with Spring Boot v3.5.6, Spring v6.2.11
2025-11-01T07:23:44.277+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.b.tutor_app.TutorAppApplicationTests   : The following 1 profile is active: "dev"
2025-11-01T07:23:46.072+01:00  INFO 22410 --- [tutorapp-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-11-01T07:23:46.075+01:00  INFO 22410 --- [tutorapp-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-11-01T07:23:46.410+01:00  INFO 22410 --- [tutorapp-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 313 ms. Found 12 JPA repository interfaces.
2025-11-01T07:23:46.443+01:00  INFO 22410 --- [tutorapp-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-11-01T07:23:46.445+01:00  INFO 22410 --- [tutorapp-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-11-01T07:23:46.482+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.AdminRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.485+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.AuditLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.486+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.EmailVerificationTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.487+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.ModerationReportRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.487+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.ParentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.488+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.PasswordResetTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.489+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.RefreshTokenRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.490+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.SocialAccountRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.490+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.StudentRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.491+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.TutorApplicationRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.492+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.TutorRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.493+01:00  INFO 22410 --- [tutorapp-backend] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.backend.tutor_app.repositories.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-11-01T07:23:46.493+01:00  INFO 22410 --- [tutorapp-backend] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30 ms. Found 0 Redis repository interfaces.
2025-11-01T07:23:47.756+01:00  INFO 22410 --- [tutorapp-backend] [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2025-11-01T07:23:47.854+01:00  INFO 22410 --- [tutorapp-backend] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 6.6.29.Final
2025-11-01T07:23:47.919+01:00  INFO 22410 --- [tutorapp-backend] [           main] o.h.c.internal.RegionFactoryInitiator    : HHH000026: Second-level cache disabled
2025-11-01T07:23:48.388+01:00  INFO 22410 --- [tutorapp-backend] [           main] o.s.o.j.p.SpringPersistenceUnitInfo      : No LoadTimeWeaver setup: ignoring JPA class transformer
2025-11-01T07:23:48.436+01:00  INFO 22410 --- [tutorapp-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2025-11-01T07:23:48.996+01:00  INFO 22410 --- [tutorapp-backend] [           main] com.zaxxer.hikari.pool.HikariPool        : HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7af56b26
2025-11-01T07:23:48.998+01:00  INFO 22410 --- [tutorapp-backend] [           main] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2025-11-01T07:23:49.066+01:00  WARN 22410 --- [tutorapp-backend] [           main] org.hibernate.orm.deprecation            : HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-11-01T07:23:49.102+01:00  INFO 22410 --- [tutorapp-backend] [           main] org.hibernate.orm.connections.pooling    : HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 14.19
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-11-01T07:23:51.644+01:00  INFO 22410 --- [tutorapp-backend] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-11-01T07:23:51.662+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    set client_min_messages = WARNING
Hibernate: 
    set client_min_messages = WARNING
2025-11-01T07:23:51.666+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists admin 
       drop constraint if exists FKgodqjbbtwk30kf3s0xuxklkr3
Hibernate: 
    alter table if exists admin 
       drop constraint if exists FKgodqjbbtwk30kf3s0xuxklkr3
2025-11-01T07:23:51.688+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists application_languages 
       drop constraint if exists FKoc1jgi0gxg3jabhf5xlopxxwf
Hibernate: 
    alter table if exists application_languages 
       drop constraint if exists FKoc1jgi0gxg3jabhf5xlopxxwf
2025-11-01T07:23:51.693+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists application_levels 
       drop constraint if exists FK6540rmx5tmtf5q4x7vlkg02ge
Hibernate: 
    alter table if exists application_levels 
       drop constraint if exists FK6540rmx5tmtf5q4x7vlkg02ge
2025-11-01T07:23:51.696+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists application_qualifications 
       drop constraint if exists FKdfnojd090j2yehd358meq3tq6
Hibernate: 
    alter table if exists application_qualifications 
       drop constraint if exists FKdfnojd090j2yehd358meq3tq6
2025-11-01T07:23:51.699+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists application_subjects 
       drop constraint if exists FK48irl4f5w36skakefb67e7uir
Hibernate: 
    alter table if exists application_subjects 
       drop constraint if exists FK48irl4f5w36skakefb67e7uir
2025-11-01T07:23:51.702+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists availability_subjects 
       drop constraint if exists FKlus3p4uqjmtn123fwyuqbl7a0
Hibernate: 
    alter table if exists availability_subjects 
       drop constraint if exists FKlus3p4uqjmtn123fwyuqbl7a0
2025-11-01T07:23:51.706+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists email_verification_tokens 
       drop constraint if exists FKkyrs2tv7xn3fnys5xcvlv3wqf
Hibernate: 
    alter table if exists email_verification_tokens 
       drop constraint if exists FKkyrs2tv7xn3fnys5xcvlv3wqf
2025-11-01T07:23:51.709+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists lesson 
       drop constraint if exists FKs645vnxkeoaux8oddw8ppc9fa
Hibernate: 
    alter table if exists lesson 
       drop constraint if exists FKs645vnxkeoaux8oddw8ppc9fa
2025-11-01T07:23:51.714+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists moderation_reports 
       drop constraint if exists FKpva4c3fyq4prrmlfpyefb0f7i
Hibernate: 
    alter table if exists moderation_reports 
       drop constraint if exists FKpva4c3fyq4prrmlfpyefb0f7i
2025-11-01T07:23:51.717+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists moderation_reports 
       drop constraint if exists FK7fm70778vci1vgbo3jfm2r9ch
Hibernate: 
    alter table if exists moderation_reports 
       drop constraint if exists FK7fm70778vci1vgbo3jfm2r9ch
2025-11-01T07:23:51.720+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists parent 
       drop constraint if exists FKo31g185knxkcy425ddamct4o9
Hibernate: 
    alter table if exists parent 
       drop constraint if exists FKo31g185knxkcy425ddamct4o9
2025-11-01T07:23:51.723+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists password_reset_tokens 
       drop constraint if exists FK8gsyvsi8r4jhmtir2upl4tc3h
Hibernate: 
    alter table if exists password_reset_tokens 
       drop constraint if exists FK8gsyvsi8r4jhmtir2upl4tc3h
2025-11-01T07:23:51.726+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists qualification 
       drop constraint if exists FKgys8shqf43ev1m7mq14kcb7ul
Hibernate: 
    alter table if exists qualification 
       drop constraint if exists FKgys8shqf43ev1m7mq14kcb7ul
2025-11-01T07:23:51.729+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists refresh_tokens 
       drop constraint if exists FKheuwts6j2dy6h6g2hjvs89pcn
Hibernate: 
    alter table if exists refresh_tokens 
       drop constraint if exists FKheuwts6j2dy6h6g2hjvs89pcn
2025-11-01T07:23:51.732+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists social_accounts 
       drop constraint if exists FKmyf6rykkkxtpotmhtyx6j1u83
Hibernate: 
    alter table if exists social_accounts 
       drop constraint if exists FKmyf6rykkkxtpotmhtyx6j1u83
2025-11-01T07:23:51.735+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student 
       drop constraint if exists FKqqq09m02bgrk47qoe6fs3ht4w
Hibernate: 
    alter table if exists student 
       drop constraint if exists FKqqq09m02bgrk47qoe6fs3ht4w
2025-11-01T07:23:51.739+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student 
       drop constraint if exists FKom57wtsticj6udoupbyx22vlv
Hibernate: 
    alter table if exists student 
       drop constraint if exists FKom57wtsticj6udoupbyx22vlv
2025-11-01T07:23:51.742+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student_availability 
       drop constraint if exists FKe9dvu6t57c3ovsnp9ggtppqiu
Hibernate: 
    alter table if exists student_availability 
       drop constraint if exists FKe9dvu6t57c3ovsnp9ggtppqiu
2025-11-01T07:23:51.745+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student_favorite_tutors 
       drop constraint if exists FKqf9p637ufj48r7a60kd1e3jxt
Hibernate: 
    alter table if exists student_favorite_tutors 
       drop constraint if exists FKqf9p637ufj48r7a60kd1e3jxt
2025-11-01T07:23:51.749+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student_favorite_tutors 
       drop constraint if exists FKbt5bfkf7tx20d3cqwjxy8t0i4
Hibernate: 
    alter table if exists student_favorite_tutors 
       drop constraint if exists FKbt5bfkf7tx20d3cqwjxy8t0i4
2025-11-01T07:23:51.753+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student_preferred_subjects 
       drop constraint if exists FK1uib99eyswku30jnbpnv3fxjl
Hibernate: 
    alter table if exists student_preferred_subjects 
       drop constraint if exists FK1uib99eyswku30jnbpnv3fxjl
2025-11-01T07:23:51.756+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor 
       drop constraint if exists FKevbhv6fi1jn88d46tyi8pkawe
Hibernate: 
    alter table if exists tutor 
       drop constraint if exists FKevbhv6fi1jn88d46tyi8pkawe
2025-11-01T07:23:51.759+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_applications 
       drop constraint if exists FKqrqdvbu157duv6o2ylgsh70s9
Hibernate: 
    alter table if exists tutor_applications 
       drop constraint if exists FKqrqdvbu157duv6o2ylgsh70s9
2025-11-01T07:23:51.762+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_languages 
       drop constraint if exists FKjjkgbu14yxqk1b3e56iq00bwe
Hibernate: 
    alter table if exists tutor_languages 
       drop constraint if exists FKjjkgbu14yxqk1b3e56iq00bwe
2025-11-01T07:23:51.766+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_levels 
       drop constraint if exists FKo79hvbleyi5vmy5gkgkd01q5b
Hibernate: 
    alter table if exists tutor_levels 
       drop constraint if exists FKo79hvbleyi5vmy5gkgkd01q5b
2025-11-01T07:23:51.770+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subject_levels 
       drop constraint if exists FKa7r9om160qmfptkopvx7pba3w
Hibernate: 
    alter table if exists tutor_subject_levels 
       drop constraint if exists FKa7r9om160qmfptkopvx7pba3w
2025-11-01T07:23:51.773+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subjects 
       drop constraint if exists FK2rgvjsbsp6aqto0jj07peljlc
Hibernate: 
    alter table if exists tutor_subjects 
       drop constraint if exists FK2rgvjsbsp6aqto0jj07peljlc
2025-11-01T07:23:51.776+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subjects 
       drop constraint if exists FKrbwej4ik99xyo11357qqwucco
Hibernate: 
    alter table if exists tutor_subjects 
       drop constraint if exists FKrbwej4ik99xyo11357qqwucco
2025-11-01T07:23:51.779+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_availability 
       drop constraint if exists FK7gm22v6vpadn2s8xq8t35kc5j
Hibernate: 
    alter table if exists tutor_availability 
       drop constraint if exists FK7gm22v6vpadn2s8xq8t35kc5j
2025-11-01T07:23:51.783+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_document 
       drop constraint if exists FKgvajshkapp9eu4fcmvwn7hgrt
Hibernate: 
    alter table if exists tutor_document 
       drop constraint if exists FKgvajshkapp9eu4fcmvwn7hgrt
2025-11-01T07:23:51.787+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_language 
       drop constraint if exists FK6scg7ml282sgm26m4hpqecnxl
Hibernate: 
    alter table if exists tutor_language 
       drop constraint if exists FK6scg7ml282sgm26m4hpqecnxl
2025-11-01T07:23:51.790+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_preferences 
       drop constraint if exists FKr8gvr6et561c99jl5jsv43qt4
Hibernate: 
    alter table if exists tutor_preferences 
       drop constraint if exists FKr8gvr6et561c99jl5jsv43qt4
2025-11-01T07:23:51.794+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_profile 
       drop constraint if exists FK7q1hdtjfk2c7kmlnlbu7gkl8o
Hibernate: 
    alter table if exists tutor_profile 
       drop constraint if exists FK7q1hdtjfk2c7kmlnlbu7gkl8o
2025-11-01T07:23:51.798+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_review 
       drop constraint if exists FKn1grl881osn7u0qtqi9epb4t3
Hibernate: 
    alter table if exists tutor_review 
       drop constraint if exists FKn1grl881osn7u0qtqi9epb4t3
2025-11-01T07:23:51.801+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_review 
       drop constraint if exists FK5gue1hsi9b3rjrj7qum03pspg
Hibernate: 
    alter table if exists tutor_review 
       drop constraint if exists FK5gue1hsi9b3rjrj7qum03pspg
2025-11-01T07:23:51.804+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subject 
       drop constraint if exists FKc8um4d7iopbq72enywi84a1f7
Hibernate: 
    alter table if exists tutor_subject 
       drop constraint if exists FKc8um4d7iopbq72enywi84a1f7
2025-11-01T07:23:51.807+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subject 
       drop constraint if exists FKrms2hp61pr8yiu7j7wenb2kx6
Hibernate: 
    alter table if exists tutor_subject 
       drop constraint if exists FKrms2hp61pr8yiu7j7wenb2kx6
2025-11-01T07:23:51.812+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists admin cascade
Hibernate: 
    drop table if exists admin cascade
2025-11-01T07:23:51.861+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists application_languages cascade
Hibernate: 
    drop table if exists application_languages cascade
2025-11-01T07:23:51.864+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists application_levels cascade
Hibernate: 
    drop table if exists application_levels cascade
2025-11-01T07:23:51.867+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists application_qualifications cascade
Hibernate: 
    drop table if exists application_qualifications cascade
2025-11-01T07:23:51.871+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists application_subjects cascade
Hibernate: 
    drop table if exists application_subjects cascade
2025-11-01T07:23:51.874+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists audit_logs cascade
Hibernate: 
    drop table if exists audit_logs cascade
2025-11-01T07:23:51.883+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists availability_subjects cascade
Hibernate: 
    drop table if exists availability_subjects cascade
2025-11-01T07:23:51.886+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists email_verification_tokens cascade
Hibernate: 
    drop table if exists email_verification_tokens cascade
2025-11-01T07:23:51.891+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists lesson cascade
Hibernate: 
    drop table if exists lesson cascade
2025-11-01T07:23:51.894+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists moderation_reports cascade
Hibernate: 
    drop table if exists moderation_reports cascade
2025-11-01T07:23:51.900+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists parent cascade
Hibernate: 
    drop table if exists parent cascade
2025-11-01T07:23:51.904+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists password_reset_tokens cascade
Hibernate: 
    drop table if exists password_reset_tokens cascade
2025-11-01T07:23:51.909+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists qualification cascade
Hibernate: 
    drop table if exists qualification cascade
2025-11-01T07:23:51.914+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists refresh_tokens cascade
Hibernate: 
    drop table if exists refresh_tokens cascade
2025-11-01T07:23:51.919+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists social_accounts cascade
Hibernate: 
    drop table if exists social_accounts cascade
2025-11-01T07:23:51.924+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists student cascade
Hibernate: 
    drop table if exists student cascade
2025-11-01T07:23:51.929+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists student_availability cascade
Hibernate: 
    drop table if exists student_availability cascade
2025-11-01T07:23:51.934+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists student_favorite_tutors cascade
Hibernate: 
    drop table if exists student_favorite_tutors cascade
2025-11-01T07:23:51.938+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists student_preferred_subjects cascade
Hibernate: 
    drop table if exists student_preferred_subjects cascade
2025-11-01T07:23:51.942+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists subject cascade
Hibernate: 
    drop table if exists subject cascade
2025-11-01T07:23:51.947+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor cascade
Hibernate: 
    drop table if exists tutor cascade
2025-11-01T07:23:51.952+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_applications cascade
Hibernate: 
    drop table if exists tutor_applications cascade
2025-11-01T07:23:51.956+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_languages cascade
Hibernate: 
    drop table if exists tutor_languages cascade
2025-11-01T07:23:51.960+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_levels cascade
Hibernate: 
    drop table if exists tutor_levels cascade
2025-11-01T07:23:51.964+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_subject_levels cascade
Hibernate: 
    drop table if exists tutor_subject_levels cascade
2025-11-01T07:23:51.968+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_subjects cascade
Hibernate: 
    drop table if exists tutor_subjects cascade
2025-11-01T07:23:51.971+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_availability cascade
Hibernate: 
    drop table if exists tutor_availability cascade
2025-11-01T07:23:51.975+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_document cascade
Hibernate: 
    drop table if exists tutor_document cascade
2025-11-01T07:23:51.981+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_language cascade
Hibernate: 
    drop table if exists tutor_language cascade
2025-11-01T07:23:51.985+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_preferences cascade
Hibernate: 
    drop table if exists tutor_preferences cascade
2025-11-01T07:23:51.991+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_profile cascade
Hibernate: 
    drop table if exists tutor_profile cascade
2025-11-01T07:23:51.996+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_review cascade
Hibernate: 
    drop table if exists tutor_review cascade
2025-11-01T07:23:52.004+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists tutor_subject cascade
Hibernate: 
    drop table if exists tutor_subject cascade
2025-11-01T07:23:52.013+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    drop table if exists utilisateur cascade
Hibernate: 
    drop table if exists utilisateur cascade
2025-11-01T07:23:52.029+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table admin (
        can_manage_content boolean not null,
        can_manage_tutors boolean not null,
        can_manage_users boolean not null,
        can_view_reports boolean not null,
        assigned_at timestamp(6),
        id bigint not null,
        admin_level varchar(255) check (admin_level in ('SUPER_ADMIN','ADMIN','MODERATOR')),
        assigned_by varchar(255),
        department varchar(255),
        permissions TEXT,
        primary key (id)
    )
Hibernate: 
    create table admin (
        can_manage_content boolean not null,
        can_manage_tutors boolean not null,
        can_manage_users boolean not null,
        can_view_reports boolean not null,
        assigned_at timestamp(6),
        id bigint not null,
        admin_level varchar(255) check (admin_level in ('SUPER_ADMIN','ADMIN','MODERATOR')),
        assigned_by varchar(255),
        department varchar(255),
        permissions TEXT,
        primary key (id)
    )
2025-11-01T07:23:52.074+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table application_languages (
        application_id bigint not null,
        language varchar(255)
    )
Hibernate: 
    create table application_languages (
        application_id bigint not null,
        language varchar(255)
    )
2025-11-01T07:23:52.077+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table application_levels (
        application_id bigint not null,
        level varchar(255)
    )
Hibernate: 
    create table application_levels (
        application_id bigint not null,
        level varchar(255)
    )
2025-11-01T07:23:52.080+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table application_qualifications (
        application_id bigint not null,
        qualification varchar(255)
    )
Hibernate: 
    create table application_qualifications (
        application_id bigint not null,
        qualification varchar(255)
    )
2025-11-01T07:23:52.088+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table application_subjects (
        application_id bigint not null,
        subject varchar(255)
    )
Hibernate: 
    create table application_subjects (
        application_id bigint not null,
        subject varchar(255)
    )
2025-11-01T07:23:52.093+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table audit_logs (
        severity_level integer,
        success boolean,
        admin_id bigint,
        created_at timestamp(6) not null,
        entity_id bigint,
        execution_time_ms bigint,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        timestamp timestamp(6) not null,
        user_id bigint,
        ip_address varchar(45),
        action varchar(50) not null check (action in ('USER_CREATED','USER_UPDATED','USER_DELETED','USER_STATUS_CHANGED','USER_ROLE_CHANGED','USER_PASSWORD_CHANGED','USER_EMAIL_VERIFIED','USER_PROFILE_PICTURE_UPDATED','USER_DEACTIVATED','USER_REACTIVATED','LOGIN_SUCCESS','LOGIN_FAILED','LOGOUT','PASSWORD_RESET_REQUESTED','PASSWORD_RESET_COMPLETED','SOCIAL_LOGIN_SUCCESS','SOCIAL_ACCOUNT_LINKED','SOCIAL_ACCOUNT_UNLINKED','TUTOR_APPLICATION_SUBMITTED','TUTOR_APPLICATION_APPROVED','TUTOR_APPLICATION_REJECTED','TUTOR_APPLICATION_UNDER_REVIEW','TUTOR_PROFILE_UPDATED','TUTOR_AVAILABILITY_UPDATED','REPORT_CREATED','REPORT_RESOLVED','REPORT_DISMISSED','REPORT_ESCALATED','USER_SUSPENDED','USER_BANNED','CONTENT_REMOVED','ADMIN_LOGIN','ADMIN_ACTION','ADMIN_USER_MANAGEMENT','ADMIN_SYSTEM_CONFIG','ADMIN_BULK_ACTION','SYSTEM_STARTUP','SYSTEM_SHUTDOWN','SYSTEM_ERROR','SYSTEM_MAINTENANCE','DATA_MIGRATION','BACKUP_CREATED','BACKUP_RESTORED','SECURITY_VIOLATION','SUSPICIOUS_ACTIVITY','RATE_LIMIT_EXCEEDED','TOKEN_REVOKED','SESSION_EXPIRED','FILE_UPLOADED','FILE_DELETED','FILE_ACCESS_DENIED','CREATED','UPDATED','DELETED','VIEWED','EXPORTED','IMPORTED')),
        entity_type varchar(100) not null,
        request_id varchar(100),
        session_id varchar(100),
        details TEXT,
        error_message TEXT,
        new_values TEXT,
        old_values TEXT,
        user_agent TEXT,
        primary key (id)
    )
Hibernate: 
    create table audit_logs (
        severity_level integer,
        success boolean,
        admin_id bigint,
        created_at timestamp(6) not null,
        entity_id bigint,
        execution_time_ms bigint,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        timestamp timestamp(6) not null,
        user_id bigint,
        ip_address varchar(45),
        action varchar(50) not null check (action in ('USER_CREATED','USER_UPDATED','USER_DELETED','USER_STATUS_CHANGED','USER_ROLE_CHANGED','USER_PASSWORD_CHANGED','USER_EMAIL_VERIFIED','USER_PROFILE_PICTURE_UPDATED','USER_DEACTIVATED','USER_REACTIVATED','LOGIN_SUCCESS','LOGIN_FAILED','LOGOUT','PASSWORD_RESET_REQUESTED','PASSWORD_RESET_COMPLETED','SOCIAL_LOGIN_SUCCESS','SOCIAL_ACCOUNT_LINKED','SOCIAL_ACCOUNT_UNLINKED','TUTOR_APPLICATION_SUBMITTED','TUTOR_APPLICATION_APPROVED','TUTOR_APPLICATION_REJECTED','TUTOR_APPLICATION_UNDER_REVIEW','TUTOR_PROFILE_UPDATED','TUTOR_AVAILABILITY_UPDATED','REPORT_CREATED','REPORT_RESOLVED','REPORT_DISMISSED','REPORT_ESCALATED','USER_SUSPENDED','USER_BANNED','CONTENT_REMOVED','ADMIN_LOGIN','ADMIN_ACTION','ADMIN_USER_MANAGEMENT','ADMIN_SYSTEM_CONFIG','ADMIN_BULK_ACTION','SYSTEM_STARTUP','SYSTEM_SHUTDOWN','SYSTEM_ERROR','SYSTEM_MAINTENANCE','DATA_MIGRATION','BACKUP_CREATED','BACKUP_RESTORED','SECURITY_VIOLATION','SUSPICIOUS_ACTIVITY','RATE_LIMIT_EXCEEDED','TOKEN_REVOKED','SESSION_EXPIRED','FILE_UPLOADED','FILE_DELETED','FILE_ACCESS_DENIED','CREATED','UPDATED','DELETED','VIEWED','EXPORTED','IMPORTED')),
        entity_type varchar(100) not null,
        request_id varchar(100),
        session_id varchar(100),
        details TEXT,
        error_message TEXT,
        new_values TEXT,
        old_values TEXT,
        user_agent TEXT,
        primary key (id)
    )
2025-11-01T07:23:52.113+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table availability_subjects (
        tutor_availability_id bigint not null,
        subject_codes varchar(255)
    )
Hibernate: 
    create table availability_subjects (
        tutor_availability_id bigint not null,
        subject_codes varchar(255)
    )
2025-11-01T07:23:52.118+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table email_verification_tokens (
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        user_id bigint not null,
        verified_at timestamp(6),
        ip_address varchar(45),
        token varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table email_verification_tokens (
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        user_id bigint not null,
        verified_at timestamp(6),
        ip_address varchar(45),
        token varchar(255) not null unique,
        primary key (id)
    )
2025-11-01T07:23:52.135+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table lesson (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        student_id bigint,
        primary key (id)
    )
Hibernate: 
    create table lesson (
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        student_id bigint,
        primary key (id)
    )
2025-11-01T07:23:52.144+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table moderation_reports (
        is_anonymous boolean,
        priority_level integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        related_content_id bigint,
        reported_at timestamp(6),
        reported_user_id bigint not null,
        reporter_id bigint not null,
        resolved_at timestamp(6),
        resolved_by bigint,
        status varchar(20) not null check (status in ('PENDING','UNDER_REVIEW','RESOLVED','DISMISSED','ESCALATED')),
        type varchar(30) not null check (type in ('INAPPROPRIATE_CONTENT','HARASSMENT','SPAM','FAKE_PROFILE','INAPPROPRIATE_BEHAVIOR','SCAM','COPYRIGHT_VIOLATION','HATE_SPEECH','VIOLENCE','OTHER')),
        reason TEXT not null,
        description TEXT,
        admin_comment TEXT,
        evidence_url varchar(255),
        related_content_type varchar(255),
        reporter_ip varchar(255),
        primary key (id)
    )
Hibernate: 
    create table moderation_reports (
        is_anonymous boolean,
        priority_level integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        related_content_id bigint,
        reported_at timestamp(6),
        reported_user_id bigint not null,
        reporter_id bigint not null,
        resolved_at timestamp(6),
        resolved_by bigint,
        status varchar(20) not null check (status in ('PENDING','UNDER_REVIEW','RESOLVED','DISMISSED','ESCALATED')),
        type varchar(30) not null check (type in ('INAPPROPRIATE_CONTENT','HARASSMENT','SPAM','FAKE_PROFILE','INAPPROPRIATE_BEHAVIOR','SCAM','COPYRIGHT_VIOLATION','HATE_SPEECH','VIOLENCE','OTHER')),
        reason TEXT not null,
        description TEXT,
        admin_comment TEXT,
        evidence_url varchar(255),
        related_content_type varchar(255),
        reporter_ip varchar(255),
        primary key (id)
    )
2025-11-01T07:23:52.159+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table parent (
        id bigint not null,
        preferred_communication varchar(20),
        relationship_to_children varchar(50),
        emergency_contact varchar(100),
        occupation varchar(100),
        primary key (id)
    )
Hibernate: 
    create table parent (
        id bigint not null,
        preferred_communication varchar(20),
        relationship_to_children varchar(50),
        emergency_contact varchar(100),
        occupation varchar(100),
        primary key (id)
    )
2025-11-01T07:23:52.167+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table password_reset_tokens (
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        used_at timestamp(6),
        user_id bigint not null,
        token varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table password_reset_tokens (
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        used_at timestamp(6),
        user_id bigint not null,
        token varchar(255) not null unique,
        primary key (id)
    )
2025-11-01T07:23:52.179+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table qualification (
        graduation_year integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null,
        verified_at timestamp(6),
        description TEXT,
        document_url varchar(255),
        field_of_study varchar(255),
        institution varchar(255) not null,
        title varchar(255) not null,
        type varchar(255) not null check (type in ('DEGREE','CERTIFICATION','DIPLOMA','LICENSE','TRAINING')),
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED','EXPIRED','UNDER_REVIEW')),
        verified_by varchar(255),
        primary key (id)
    )
Hibernate: 
    create table qualification (
        graduation_year integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null,
        verified_at timestamp(6),
        description TEXT,
        document_url varchar(255),
        field_of_study varchar(255),
        institution varchar(255) not null,
        title varchar(255) not null,
        type varchar(255) not null check (type in ('DEGREE','CERTIFICATION','DIPLOMA','LICENSE','TRAINING')),
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED','EXPIRED','UNDER_REVIEW')),
        verified_by varchar(255),
        primary key (id)
    )
2025-11-01T07:23:52.194+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table refresh_tokens (
        is_revoked boolean not null,
        usage_count integer not null,
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        last_used timestamp(6),
        parent_token_id bigint,
        revoked_at timestamp(6),
        user_id bigint not null,
        browser_language varchar(10),
        ip_address varchar(45),
        browser_version varchar(50),
        os_version varchar(50),
        browser_name varchar(100),
        os_name varchar(100),
        timezone varchar(100),
        device_info varchar(500),
        user_agent varchar(1000),
        revoked_reason varchar(255),
        token varchar(255) not null unique,
        primary key (id)
    )
Hibernate: 
    create table refresh_tokens (
        is_revoked boolean not null,
        usage_count integer not null,
        created_at timestamp(6) not null,
        expires_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        last_used timestamp(6),
        parent_token_id bigint,
        revoked_at timestamp(6),
        user_id bigint not null,
        browser_language varchar(10),
        ip_address varchar(45),
        browser_version varchar(50),
        os_version varchar(50),
        browser_name varchar(100),
        os_name varchar(100),
        timezone varchar(100),
        device_info varchar(500),
        user_agent varchar(1000),
        revoked_reason varchar(255),
        token varchar(255) not null unique,
        primary key (id)
    )
2025-11-01T07:23:52.212+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table social_accounts (
        is_primary boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        token_expires_at timestamp(6),
        used_at timestamp(6),
        user_id bigint not null,
        provider varchar(20) not null check (provider in ('GOOGLE','FACEBOOK','GITHUB')),
        provider_email varchar(100),
        provider_id varchar(100) not null,
        provider_name varchar(100),
        access_token TEXT,
        provider_avatar varchar(255),
        refresh_token TEXT,
        primary key (id)
    )
Hibernate: 
    create table social_accounts (
        is_primary boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        token_expires_at timestamp(6),
        used_at timestamp(6),
        user_id bigint not null,
        provider varchar(20) not null check (provider in ('GOOGLE','FACEBOOK','GITHUB')),
        provider_email varchar(100),
        provider_id varchar(100) not null,
        provider_name varchar(100),
        access_token TEXT,
        provider_avatar varchar(255),
        refresh_token TEXT,
        primary key (id)
    )
2025-11-01T07:23:52.226+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table student (
        birth_date date,
        id bigint not null,
        parent_id bigint,
        learning_style varchar(20),
        school_level varchar(50),
        school_name varchar(100),
        address varchar(200),
        goals TEXT,
        primary key (id)
    )
Hibernate: 
    create table student (
        birth_date date,
        id bigint not null,
        parent_id bigint,
        learning_style varchar(20),
        school_level varchar(50),
        school_name varchar(100),
        address varchar(200),
        goals TEXT,
        primary key (id)
    )
2025-11-01T07:23:52.236+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table student_availability (
        student_id bigint not null,
        time_slot varchar(255)
    )
Hibernate: 
    create table student_availability (
        student_id bigint not null,
        time_slot varchar(255)
    )
2025-11-01T07:23:52.239+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table student_favorite_tutors (
        student_id bigint not null,
        tutor_id bigint not null,
        primary key (student_id, tutor_id)
    )
Hibernate: 
    create table student_favorite_tutors (
        student_id bigint not null,
        tutor_id bigint not null,
        primary key (student_id, tutor_id)
    )
2025-11-01T07:23:52.245+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table student_preferred_subjects (
        student_id bigint not null,
        subject_code varchar(255)
    )
Hibernate: 
    create table student_preferred_subjects (
        student_id bigint not null,
        subject_code varchar(255)
    )
2025-11-01T07:23:52.249+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table subject (
        is_active boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        category varchar(255) not null check (category in ('SCIENCES','MATHEMATICS','LANGUAGES','HUMANITIES','ARTS','TECHNOLOGY','BUSINESS','OTHER')),
        code varchar(255) not null unique,
        description TEXT,
        icon_name varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table subject (
        is_active boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        category varchar(255) not null check (category in ('SCIENCES','MATHEMATICS','LANGUAGES','HUMANITIES','ARTS','TECHNOLOGY','BUSINESS','OTHER')),
        code varchar(255) not null unique,
        description TEXT,
        icon_name varchar(255),
        name varchar(255) not null,
        primary key (id)
    )
2025-11-01T07:23:52.263+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor (
        average_rating float(53),
        experience_years integer check (experience_years>=0),
        hourly_rate numeric(10,2),
        is_available boolean not null,
        response_time_hours integer,
        total_lessons integer check (total_lessons>=0),
        total_reviews integer check (total_reviews>=0),
        id bigint not null,
        verification_status varchar(20) check (verification_status in ('PENDING','VERIFIED','REJECTED','EXPIRED','UNDER_REVIEW')),
        timezone varchar(50),
        location varchar(100),
        bio TEXT,
        verification_notes TEXT,
        video_intro_url varchar(255),
        primary key (id)
    )
Hibernate: 
    create table tutor (
        average_rating float(53),
        experience_years integer check (experience_years>=0),
        hourly_rate numeric(10,2),
        is_available boolean not null,
        response_time_hours integer,
        total_lessons integer check (total_lessons>=0),
        total_reviews integer check (total_reviews>=0),
        id bigint not null,
        verification_status varchar(20) check (verification_status in ('PENDING','VERIFIED','REJECTED','EXPIRED','UNDER_REVIEW')),
        timezone varchar(50),
        location varchar(100),
        bio TEXT,
        verification_notes TEXT,
        video_intro_url varchar(255),
        primary key (id)
    )
2025-11-01T07:23:52.275+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_applications (
        available_hours_per_week integer,
        has_certifications boolean,
        has_teaching_experience boolean,
        hourly_rate float(53),
        years_of_experience integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        reviewed_at timestamp(6),
        reviewed_by bigint,
        submitted_at timestamp(6),
        utilisateur_id bigint not null,
        status varchar(20) not null check (status in ('PENDING','UNDER_REVIEW','APPROVED','REJECTED','CANCELLED','EXPIRED')),
        motivation TEXT not null,
        experience TEXT,
        admin_comment TEXT,
        primary key (id)
    )
Hibernate: 
    create table tutor_applications (
        available_hours_per_week integer,
        has_certifications boolean,
        has_teaching_experience boolean,
        hourly_rate float(53),
        years_of_experience integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        reviewed_at timestamp(6),
        reviewed_by bigint,
        submitted_at timestamp(6),
        utilisateur_id bigint not null,
        status varchar(20) not null check (status in ('PENDING','UNDER_REVIEW','APPROVED','REJECTED','CANCELLED','EXPIRED')),
        motivation TEXT not null,
        experience TEXT,
        admin_comment TEXT,
        primary key (id)
    )
2025-11-01T07:23:52.285+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_languages (
        tutor_profile_id bigint not null,
        languages varchar(255)
    )
Hibernate: 
    create table tutor_languages (
        tutor_profile_id bigint not null,
        languages varchar(255)
    )
2025-11-01T07:23:52.288+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_levels (
        tutor_profile_id bigint not null,
        levels varchar(255)
    )
Hibernate: 
    create table tutor_levels (
        tutor_profile_id bigint not null,
        levels varchar(255)
    )
2025-11-01T07:23:52.292+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_subject_levels (
        tutor_subject_id bigint not null,
        levels varchar(255) check (levels in ('PRIMARY','MIDDLE','HIGH','UNIVERSITY','ADULT','PROFESSIONAL'))
    )
Hibernate: 
    create table tutor_subject_levels (
        tutor_subject_id bigint not null,
        levels varchar(255) check (levels in ('PRIMARY','MIDDLE','HIGH','UNIVERSITY','ADULT','PROFESSIONAL'))
    )
2025-11-01T07:23:52.296+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_subjects (
        subject_id bigint not null,
        tutor_id bigint not null,
        primary key (subject_id, tutor_id)
    )
Hibernate: 
    create table tutor_subjects (
        subject_id bigint not null,
        tutor_id bigint not null,
        primary key (subject_id, tutor_id)
    )
2025-11-01T07:23:52.303+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_availability (
        end_time time(6) not null,
        is_available boolean not null,
        is_recurring boolean not null,
        max_students integer,
        start_time time(6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null,
        day_of_week varchar(255) not null check (day_of_week in ('MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY','SATURDAY','SUNDAY')),
        timezone varchar(255),
        primary key (id)
    )
Hibernate: 
    create table tutor_availability (
        end_time time(6) not null,
        is_available boolean not null,
        is_recurring boolean not null,
        max_students integer,
        start_time time(6) not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null,
        day_of_week varchar(255) not null check (day_of_week in ('MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY','SATURDAY','SUNDAY')),
        timezone varchar(255),
        primary key (id)
    )
2025-11-01T07:23:52.314+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_document (
        created_at timestamp(6) not null,
        file_size bigint,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null,
        verified_at timestamp(6),
        file_url varchar(255) not null,
        filename varchar(255) not null,
        mime_type varchar(255),
        original_filename varchar(255) not null,
        rejection_reason varchar(255),
        type varchar(255) not null check (type in ('DIPLOMA','CERTIFICATE','ID_CARD','BACKGROUND_CHECK','CV','PHOTO','OTHER')),
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED','EXPIRED','UNDER_REVIEW')),
        verified_by varchar(255),
        primary key (id)
    )
Hibernate: 
    create table tutor_document (
        created_at timestamp(6) not null,
        file_size bigint,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null,
        verified_at timestamp(6),
        file_url varchar(255) not null,
        filename varchar(255) not null,
        mime_type varchar(255),
        original_filename varchar(255) not null,
        rejection_reason varchar(255),
        type varchar(255) not null check (type in ('DIPLOMA','CERTIFICATE','ID_CARD','BACKGROUND_CHECK','CV','PHOTO','OTHER')),
        verification_status varchar(255) not null check (verification_status in ('PENDING','VERIFIED','REJECTED','EXPIRED','UNDER_REVIEW')),
        verified_by varchar(255),
        primary key (id)
    )
2025-11-01T07:23:52.328+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_language (
        is_native boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null,
        language_code varchar(255) not null,
        language_name varchar(255) not null,
        level varchar(255) not null check (level in ('BEGINNER','INTERMEDIATE','ADVANCED','FLUENT','NATIVE')),
        primary key (id)
    )
Hibernate: 
    create table tutor_language (
        is_native boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null,
        language_code varchar(255) not null,
        language_name varchar(255) not null,
        level varchar(255) not null check (level in ('BEGINNER','INTERMEDIATE','ADVANCED','FLUENT','NATIVE')),
        primary key (id)
    )
2025-11-01T07:23:52.341+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_preferences (
        advance_booking_hours integer not null,
        auto_accept_bookings boolean not null,
        break_between_lessons integer not null,
        email_notifications boolean not null,
        lesson_duration_minutes integer not null,
        marketing_emails boolean not null,
        max_students_per_lesson integer not null,
        push_notifications boolean not null,
        sms_notifications boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null unique,
        currency varchar(255) not null,
        timezone varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    create table tutor_preferences (
        advance_booking_hours integer not null,
        auto_accept_bookings boolean not null,
        break_between_lessons integer not null,
        email_notifications boolean not null,
        lesson_duration_minutes integer not null,
        marketing_emails boolean not null,
        max_students_per_lesson integer not null,
        push_notifications boolean not null,
        sms_notifications boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        tutor_id bigint not null unique,
        currency varchar(255) not null,
        timezone varchar(255) not null,
        primary key (id)
    )
2025-11-01T07:23:52.360+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_profile (
        is_available boolean not null,
        is_verified boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        user_id bigint unique,
        bio TEXT,
        experience varchar(255),
        response_time varchar(255),
        primary key (id)
    )
Hibernate: 
    create table tutor_profile (
        is_available boolean not null,
        is_verified boolean not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        user_id bigint unique,
        bio TEXT,
        experience varchar(255),
        response_time varchar(255),
        primary key (id)
    )
2025-11-01T07:23:52.376+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_review (
        helpful_count integer not null,
        is_anonymous boolean not null,
        is_verified boolean not null,
        rating integer not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        student_id bigint not null,
        tutor_id bigint not null,
        comment TEXT,
        primary key (id)
    )
Hibernate: 
    create table tutor_review (
        helpful_count integer not null,
        is_anonymous boolean not null,
        is_verified boolean not null,
        rating integer not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        student_id bigint not null,
        tutor_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-11-01T07:23:52.388+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table tutor_subject (
        hourly_rate numeric(38,2) not null,
        is_primary boolean not null,
        years_experience integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        subject_id bigint not null,
        tutor_id bigint not null,
        primary key (id)
    )
Hibernate: 
    create table tutor_subject (
        hourly_rate numeric(38,2) not null,
        is_primary boolean not null,
        years_experience integer,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_update timestamp(6) not null,
        subject_id bigint not null,
        tutor_id bigint not null,
        primary key (id)
    )
2025-11-01T07:23:52.401+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create table utilisateur (
        accept_marketing boolean not null,
        accept_terms boolean not null,
        email_verified boolean not null,
        login_attempts integer not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_login timestamp(6),
        last_update timestamp(6) not null,
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        phone_number varchar(20),
        role varchar(20) not null check (role in ('STUDENT','TUTOR','PARENT','ADMIN')),
        status varchar(30) not null check (status in ('ACTIVE','INACTIVE','SUSPENDED','PENDING_VERIFICATION','LOCKED','DELETED')),
        user_type varchar(31) not null,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        email varchar(100) not null unique,
        password varchar(255) not null,
        profile_picture varchar(255),
        primary key (id)
    )
Hibernate: 
    create table utilisateur (
        accept_marketing boolean not null,
        accept_terms boolean not null,
        email_verified boolean not null,
        login_attempts integer not null,
        created_at timestamp(6) not null,
        id bigint generated by default as identity,
        last_login timestamp(6),
        last_update timestamp(6) not null,
        locked_until timestamp(6),
        password_changed_at timestamp(6),
        phone_number varchar(20),
        role varchar(20) not null check (role in ('STUDENT','TUTOR','PARENT','ADMIN')),
        status varchar(30) not null check (status in ('ACTIVE','INACTIVE','SUSPENDED','PENDING_VERIFICATION','LOCKED','DELETED')),
        user_type varchar(31) not null,
        first_name varchar(50) not null,
        last_name varchar(50) not null,
        email varchar(100) not null unique,
        password varchar(255) not null,
        profile_picture varchar(255),
        primary key (id)
    )
2025-11-01T07:23:52.425+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create index idx_audit_user_id 
       on audit_logs (user_id)
Hibernate: 
    create index idx_audit_user_id 
       on audit_logs (user_id)
2025-11-01T07:23:52.430+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create index idx_audit_admin_id 
       on audit_logs (admin_id)
Hibernate: 
    create index idx_audit_admin_id 
       on audit_logs (admin_id)
2025-11-01T07:23:52.438+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create index idx_audit_action 
       on audit_logs (action)
Hibernate: 
    create index idx_audit_action 
       on audit_logs (action)
2025-11-01T07:23:52.443+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create index idx_audit_timestamp 
       on audit_logs (timestamp)
Hibernate: 
    create index idx_audit_timestamp 
       on audit_logs (timestamp)
2025-11-01T07:23:52.449+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    create index idx_audit_entity 
       on audit_logs (entity_type, entity_id)
Hibernate: 
    create index idx_audit_entity 
       on audit_logs (entity_type, entity_id)
2025-11-01T07:23:52.454+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists admin 
       add constraint FKgodqjbbtwk30kf3s0xuxklkr3 
       foreign key (id) 
       references utilisateur
Hibernate: 
    alter table if exists admin 
       add constraint FKgodqjbbtwk30kf3s0xuxklkr3 
       foreign key (id) 
       references utilisateur
2025-11-01T07:23:52.463+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists application_languages 
       add constraint FKoc1jgi0gxg3jabhf5xlopxxwf 
       foreign key (application_id) 
       references tutor_applications
Hibernate: 
    alter table if exists application_languages 
       add constraint FKoc1jgi0gxg3jabhf5xlopxxwf 
       foreign key (application_id) 
       references tutor_applications
2025-11-01T07:23:52.467+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists application_levels 
       add constraint FK6540rmx5tmtf5q4x7vlkg02ge 
       foreign key (application_id) 
       references tutor_applications
Hibernate: 
    alter table if exists application_levels 
       add constraint FK6540rmx5tmtf5q4x7vlkg02ge 
       foreign key (application_id) 
       references tutor_applications
2025-11-01T07:23:52.470+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists application_qualifications 
       add constraint FKdfnojd090j2yehd358meq3tq6 
       foreign key (application_id) 
       references tutor_applications
Hibernate: 
    alter table if exists application_qualifications 
       add constraint FKdfnojd090j2yehd358meq3tq6 
       foreign key (application_id) 
       references tutor_applications
2025-11-01T07:23:52.474+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists application_subjects 
       add constraint FK48irl4f5w36skakefb67e7uir 
       foreign key (application_id) 
       references tutor_applications
Hibernate: 
    alter table if exists application_subjects 
       add constraint FK48irl4f5w36skakefb67e7uir 
       foreign key (application_id) 
       references tutor_applications
2025-11-01T07:23:52.477+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists availability_subjects 
       add constraint FKlus3p4uqjmtn123fwyuqbl7a0 
       foreign key (tutor_availability_id) 
       references tutor_availability
Hibernate: 
    alter table if exists availability_subjects 
       add constraint FKlus3p4uqjmtn123fwyuqbl7a0 
       foreign key (tutor_availability_id) 
       references tutor_availability
2025-11-01T07:23:52.481+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists email_verification_tokens 
       add constraint FKkyrs2tv7xn3fnys5xcvlv3wqf 
       foreign key (user_id) 
       references utilisateur
Hibernate: 
    alter table if exists email_verification_tokens 
       add constraint FKkyrs2tv7xn3fnys5xcvlv3wqf 
       foreign key (user_id) 
       references utilisateur
2025-11-01T07:23:52.485+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists lesson 
       add constraint FKs645vnxkeoaux8oddw8ppc9fa 
       foreign key (student_id) 
       references student
Hibernate: 
    alter table if exists lesson 
       add constraint FKs645vnxkeoaux8oddw8ppc9fa 
       foreign key (student_id) 
       references student
2025-11-01T07:23:52.489+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists moderation_reports 
       add constraint FKpva4c3fyq4prrmlfpyefb0f7i 
       foreign key (reported_user_id) 
       references utilisateur
Hibernate: 
    alter table if exists moderation_reports 
       add constraint FKpva4c3fyq4prrmlfpyefb0f7i 
       foreign key (reported_user_id) 
       references utilisateur
2025-11-01T07:23:52.493+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists moderation_reports 
       add constraint FK7fm70778vci1vgbo3jfm2r9ch 
       foreign key (reporter_id) 
       references utilisateur
Hibernate: 
    alter table if exists moderation_reports 
       add constraint FK7fm70778vci1vgbo3jfm2r9ch 
       foreign key (reporter_id) 
       references utilisateur
2025-11-01T07:23:52.497+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists parent 
       add constraint FKo31g185knxkcy425ddamct4o9 
       foreign key (id) 
       references utilisateur
Hibernate: 
    alter table if exists parent 
       add constraint FKo31g185knxkcy425ddamct4o9 
       foreign key (id) 
       references utilisateur
2025-11-01T07:23:52.500+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists password_reset_tokens 
       add constraint FK8gsyvsi8r4jhmtir2upl4tc3h 
       foreign key (user_id) 
       references utilisateur
Hibernate: 
    alter table if exists password_reset_tokens 
       add constraint FK8gsyvsi8r4jhmtir2upl4tc3h 
       foreign key (user_id) 
       references utilisateur
2025-11-01T07:23:52.505+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists qualification 
       add constraint FKgys8shqf43ev1m7mq14kcb7ul 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists qualification 
       add constraint FKgys8shqf43ev1m7mq14kcb7ul 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.510+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists refresh_tokens 
       add constraint FKheuwts6j2dy6h6g2hjvs89pcn 
       foreign key (user_id) 
       references utilisateur
Hibernate: 
    alter table if exists refresh_tokens 
       add constraint FKheuwts6j2dy6h6g2hjvs89pcn 
       foreign key (user_id) 
       references utilisateur
2025-11-01T07:23:52.514+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists social_accounts 
       add constraint FKmyf6rykkkxtpotmhtyx6j1u83 
       foreign key (user_id) 
       references utilisateur
Hibernate: 
    alter table if exists social_accounts 
       add constraint FKmyf6rykkkxtpotmhtyx6j1u83 
       foreign key (user_id) 
       references utilisateur
2025-11-01T07:23:52.519+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student 
       add constraint FKqqq09m02bgrk47qoe6fs3ht4w 
       foreign key (parent_id) 
       references parent
Hibernate: 
    alter table if exists student 
       add constraint FKqqq09m02bgrk47qoe6fs3ht4w 
       foreign key (parent_id) 
       references parent
2025-11-01T07:23:52.523+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student 
       add constraint FKom57wtsticj6udoupbyx22vlv 
       foreign key (id) 
       references utilisateur
Hibernate: 
    alter table if exists student 
       add constraint FKom57wtsticj6udoupbyx22vlv 
       foreign key (id) 
       references utilisateur
2025-11-01T07:23:52.526+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student_availability 
       add constraint FKe9dvu6t57c3ovsnp9ggtppqiu 
       foreign key (student_id) 
       references student
Hibernate: 
    alter table if exists student_availability 
       add constraint FKe9dvu6t57c3ovsnp9ggtppqiu 
       foreign key (student_id) 
       references student
2025-11-01T07:23:52.529+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student_favorite_tutors 
       add constraint FKqf9p637ufj48r7a60kd1e3jxt 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists student_favorite_tutors 
       add constraint FKqf9p637ufj48r7a60kd1e3jxt 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.533+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student_favorite_tutors 
       add constraint FKbt5bfkf7tx20d3cqwjxy8t0i4 
       foreign key (student_id) 
       references student
Hibernate: 
    alter table if exists student_favorite_tutors 
       add constraint FKbt5bfkf7tx20d3cqwjxy8t0i4 
       foreign key (student_id) 
       references student
2025-11-01T07:23:52.537+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists student_preferred_subjects 
       add constraint FK1uib99eyswku30jnbpnv3fxjl 
       foreign key (student_id) 
       references student
Hibernate: 
    alter table if exists student_preferred_subjects 
       add constraint FK1uib99eyswku30jnbpnv3fxjl 
       foreign key (student_id) 
       references student
2025-11-01T07:23:52.540+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor 
       add constraint FKevbhv6fi1jn88d46tyi8pkawe 
       foreign key (id) 
       references utilisateur
Hibernate: 
    alter table if exists tutor 
       add constraint FKevbhv6fi1jn88d46tyi8pkawe 
       foreign key (id) 
       references utilisateur
2025-11-01T07:23:52.543+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_applications 
       add constraint FKqrqdvbu157duv6o2ylgsh70s9 
       foreign key (utilisateur_id) 
       references utilisateur
Hibernate: 
    alter table if exists tutor_applications 
       add constraint FKqrqdvbu157duv6o2ylgsh70s9 
       foreign key (utilisateur_id) 
       references utilisateur
2025-11-01T07:23:52.547+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_languages 
       add constraint FKjjkgbu14yxqk1b3e56iq00bwe 
       foreign key (tutor_profile_id) 
       references tutor_profile
Hibernate: 
    alter table if exists tutor_languages 
       add constraint FKjjkgbu14yxqk1b3e56iq00bwe 
       foreign key (tutor_profile_id) 
       references tutor_profile
2025-11-01T07:23:52.551+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_levels 
       add constraint FKo79hvbleyi5vmy5gkgkd01q5b 
       foreign key (tutor_profile_id) 
       references tutor_profile
Hibernate: 
    alter table if exists tutor_levels 
       add constraint FKo79hvbleyi5vmy5gkgkd01q5b 
       foreign key (tutor_profile_id) 
       references tutor_profile
2025-11-01T07:23:52.554+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subject_levels 
       add constraint FKa7r9om160qmfptkopvx7pba3w 
       foreign key (tutor_subject_id) 
       references tutor_subject
Hibernate: 
    alter table if exists tutor_subject_levels 
       add constraint FKa7r9om160qmfptkopvx7pba3w 
       foreign key (tutor_subject_id) 
       references tutor_subject
2025-11-01T07:23:52.557+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subjects 
       add constraint FK2rgvjsbsp6aqto0jj07peljlc 
       foreign key (subject_id) 
       references subject
Hibernate: 
    alter table if exists tutor_subjects 
       add constraint FK2rgvjsbsp6aqto0jj07peljlc 
       foreign key (subject_id) 
       references subject
2025-11-01T07:23:52.562+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subjects 
       add constraint FKrbwej4ik99xyo11357qqwucco 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists tutor_subjects 
       add constraint FKrbwej4ik99xyo11357qqwucco 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.565+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_availability 
       add constraint FK7gm22v6vpadn2s8xq8t35kc5j 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists tutor_availability 
       add constraint FK7gm22v6vpadn2s8xq8t35kc5j 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.568+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_document 
       add constraint FKgvajshkapp9eu4fcmvwn7hgrt 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists tutor_document 
       add constraint FKgvajshkapp9eu4fcmvwn7hgrt 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.572+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_language 
       add constraint FK6scg7ml282sgm26m4hpqecnxl 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists tutor_language 
       add constraint FK6scg7ml282sgm26m4hpqecnxl 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.575+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_preferences 
       add constraint FKr8gvr6et561c99jl5jsv43qt4 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists tutor_preferences 
       add constraint FKr8gvr6et561c99jl5jsv43qt4 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.579+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_profile 
       add constraint FK7q1hdtjfk2c7kmlnlbu7gkl8o 
       foreign key (user_id) 
       references utilisateur
Hibernate: 
    alter table if exists tutor_profile 
       add constraint FK7q1hdtjfk2c7kmlnlbu7gkl8o 
       foreign key (user_id) 
       references utilisateur
2025-11-01T07:23:52.583+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_review 
       add constraint FKn1grl881osn7u0qtqi9epb4t3 
       foreign key (student_id) 
       references student
Hibernate: 
    alter table if exists tutor_review 
       add constraint FKn1grl881osn7u0qtqi9epb4t3 
       foreign key (student_id) 
       references student
2025-11-01T07:23:52.586+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_review 
       add constraint FK5gue1hsi9b3rjrj7qum03pspg 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists tutor_review 
       add constraint FK5gue1hsi9b3rjrj7qum03pspg 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.590+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subject 
       add constraint FKc8um4d7iopbq72enywi84a1f7 
       foreign key (subject_id) 
       references subject
Hibernate: 
    alter table if exists tutor_subject 
       add constraint FKc8um4d7iopbq72enywi84a1f7 
       foreign key (subject_id) 
       references subject
2025-11-01T07:23:52.593+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    alter table if exists tutor_subject 
       add constraint FKrms2hp61pr8yiu7j7wenb2kx6 
       foreign key (tutor_id) 
       references tutor
Hibernate: 
    alter table if exists tutor_subject 
       add constraint FKrms2hp61pr8yiu7j7wenb2kx6 
       foreign key (tutor_id) 
       references tutor
2025-11-01T07:23:52.602+01:00  INFO 22410 --- [tutorapp-backend] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-11-01T07:23:53.233+01:00  INFO 22410 --- [tutorapp-backend] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-11-01T07:23:54.776+01:00  INFO 22410 --- [tutorapp-backend] [           main] eAuthenticationProviderManagerConfigurer : Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-11-01T07:23:54.777+01:00  WARN 22410 --- [tutorapp-backend] [           main] r$InitializeUserDetailsManagerConfigurer : Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-11-01T07:23:55.257+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.backend.tutor_app.config.GeoIpConfig   : 🌍 Initialisation de MaxMind GeoIP2 DatabaseReader...
2025-11-01T07:23:55.258+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.backend.tutor_app.config.GeoIpConfig   :    - Account ID: 1247196
2025-11-01T07:23:55.259+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.backend.tutor_app.config.GeoIpConfig   :    - Database: GeoLite2-City.mmdb
2025-11-01T07:23:55.259+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.backend.tutor_app.config.GeoIpConfig   :    - Cache size: 4096 entrées (~16 MB RAM)
2025-11-01T07:23:55.401+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.backend.tutor_app.config.GeoIpConfig   : ✅ MaxMind GeoIP2 DatabaseReader initialisé avec succès
2025-11-01T07:23:55.402+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.backend.tutor_app.config.GeoIpConfig   :    Type de base: GeoLite2-City
2025-11-01T07:23:55.402+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.backend.tutor_app.config.GeoIpConfig   :    Date de build: Tue Oct 28 09:39:33 WAT 2025
2025-11-01T07:23:55.410+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.b.t.s.IpGeolocationServiceImpl         : ✅ IpGeolocationServiceImpl initialisé avec MaxMind GeoIP2
2025-11-01T07:23:55.767+01:00  WARN 22410 --- [tutorapp-backend] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-11-01T07:23:56.450+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-11-01T07:23:58.783+01:00  INFO 22410 --- [tutorapp-backend] [           main] c.b.tutor_app.TutorAppApplicationTests   : Started TutorAppApplicationTests in 15.063 seconds (process running for 16.825)
2025-11-01T07:23:58.869+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    select
        count(*) 
    from
        utilisateur u1_0
Hibernate: 
    select
        count(*) 
    from
        utilisateur u1_0
2025-11-01T07:23:59.160+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        utilisateur
        (accept_marketing, accept_terms, created_at, email, email_verified, first_name, last_login, last_name, last_update, locked_until, login_attempts, password, password_changed_at, phone_number, profile_picture, role, status, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'ADMIN')
Hibernate: 
    insert 
    into
        utilisateur
        (accept_marketing, accept_terms, created_at, email, email_verified, first_name, last_login, last_name, last_update, locked_until, login_attempts, password, password_changed_at, phone_number, profile_picture, role, status, user_type) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'ADMIN')
2025-11-01T07:23:59.184+01:00 DEBUG 22410 --- [tutorapp-backend] [           main] org.hibernate.SQL                        : 
    insert 
    into
        admin
        (admin_level, assigned_at, assigned_by, can_manage_content, can_manage_tutors, can_manage_users, can_view_reports, department, permissions, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    insert 
    into
        admin
        (admin_level, assigned_at, assigned_by, can_manage_content, can_manage_tutors, can_manage_users, can_view_reports, department, permissions, id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
✅ Admin créé avec succès: email=admin@example.com, password=admin123
]]></system-out>
  </testcase>
</testsuite>